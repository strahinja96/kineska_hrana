//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KineskaHrana.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class KineskaHranaEntities : DbContext
    {
        public KineskaHranaEntities()
            : base("name=KineskaHranaEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Kontakt> Kontakts { get; set; }
        public DbSet<Korisnici> Korisnicis { get; set; }
        public DbSet<Narudzbine> Narudzbines { get; set; }
        public DbSet<Uloge> Uloges { get; set; }
        public DbSet<Jela> Jelas { get; set; }
        public DbSet<Meni> Menis { get; set; }
        public DbSet<Ankete> Anketes { get; set; }
        public DbSet<Odgovori> Odgovoris { get; set; }
        public DbSet<Galerija> Galerijas { get; set; }
        public DbSet<Dogadjaji> Dogadjajis { get; set; }
    
        public virtual int UserRegister(string username, string password, string email)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserRegister", usernameParameter, passwordParameter, emailParameter);
        }
    
        public virtual int UserInsert(string username, string password, string email, Nullable<int> idUloga)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var idUlogaParameter = idUloga.HasValue ?
                new ObjectParameter("idUloga", idUloga) :
                new ObjectParameter("idUloga", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInsert", usernameParameter, passwordParameter, emailParameter, idUlogaParameter);
        }
    
        public virtual int NaruciJelo(Nullable<int> idKorisnik, Nullable<int> idJelo, Nullable<int> vreme, Nullable<decimal> cena, string ime, string prezime, string adresa)
        {
            var idKorisnikParameter = idKorisnik.HasValue ?
                new ObjectParameter("idKorisnik", idKorisnik) :
                new ObjectParameter("idKorisnik", typeof(int));
    
            var idJeloParameter = idJelo.HasValue ?
                new ObjectParameter("idJelo", idJelo) :
                new ObjectParameter("idJelo", typeof(int));
    
            var vremeParameter = vreme.HasValue ?
                new ObjectParameter("vreme", vreme) :
                new ObjectParameter("vreme", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(decimal));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("adresa", adresa) :
                new ObjectParameter("adresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NaruciJelo", idKorisnikParameter, idJeloParameter, vremeParameter, cenaParameter, imeParameter, prezimeParameter, adresaParameter);
        }
    
        public virtual int KontaktInsert(string ime, string prezime, string poruka, string email)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var porukaParameter = poruka != null ?
                new ObjectParameter("poruka", poruka) :
                new ObjectParameter("poruka", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KontaktInsert", imeParameter, prezimeParameter, porukaParameter, emailParameter);
        }
    
        public virtual int OdgovorGlasanje(Nullable<int> idOdgovor)
        {
            var idOdgovorParameter = idOdgovor.HasValue ?
                new ObjectParameter("idOdgovor", idOdgovor) :
                new ObjectParameter("idOdgovor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OdgovorGlasanje", idOdgovorParameter);
        }
    
        public virtual int NarudzbineInsert(Nullable<int> idKorisnik, Nullable<int> idJelo, Nullable<System.DateTime> vreme, Nullable<decimal> cena, string ime, string prezime, string adresa)
        {
            var idKorisnikParameter = idKorisnik.HasValue ?
                new ObjectParameter("idKorisnik", idKorisnik) :
                new ObjectParameter("idKorisnik", typeof(int));
    
            var idJeloParameter = idJelo.HasValue ?
                new ObjectParameter("idJelo", idJelo) :
                new ObjectParameter("idJelo", typeof(int));
    
            var vremeParameter = vreme.HasValue ?
                new ObjectParameter("vreme", vreme) :
                new ObjectParameter("vreme", typeof(System.DateTime));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(decimal));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("adresa", adresa) :
                new ObjectParameter("adresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbineInsert", idKorisnikParameter, idJeloParameter, vremeParameter, cenaParameter, imeParameter, prezimeParameter, adresaParameter);
        }
    
        public virtual int AnketeDelete(Nullable<int> idAnketa)
        {
            var idAnketaParameter = idAnketa.HasValue ?
                new ObjectParameter("idAnketa", idAnketa) :
                new ObjectParameter("idAnketa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnketeDelete", idAnketaParameter);
        }
    
        public virtual int AnketeInsert(string pitanje, Nullable<int> aktivna)
        {
            var pitanjeParameter = pitanje != null ?
                new ObjectParameter("pitanje", pitanje) :
                new ObjectParameter("pitanje", typeof(string));
    
            var aktivnaParameter = aktivna.HasValue ?
                new ObjectParameter("aktivna", aktivna) :
                new ObjectParameter("aktivna", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnketeInsert", pitanjeParameter, aktivnaParameter);
        }
    
        public virtual int AnketeUpdate(Nullable<int> idAnketa, string pitanje, Nullable<int> aktivna)
        {
            var idAnketaParameter = idAnketa.HasValue ?
                new ObjectParameter("idAnketa", idAnketa) :
                new ObjectParameter("idAnketa", typeof(int));
    
            var pitanjeParameter = pitanje != null ?
                new ObjectParameter("pitanje", pitanje) :
                new ObjectParameter("pitanje", typeof(string));
    
            var aktivnaParameter = aktivna.HasValue ?
                new ObjectParameter("aktivna", aktivna) :
                new ObjectParameter("aktivna", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnketeUpdate", idAnketaParameter, pitanjeParameter, aktivnaParameter);
        }
    
        public virtual int GalerijaDelete(Nullable<int> idSlike)
        {
            var idSlikeParameter = idSlike.HasValue ?
                new ObjectParameter("idSlike", idSlike) :
                new ObjectParameter("idSlike", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GalerijaDelete", idSlikeParameter);
        }
    
        public virtual int GalerijaInsert(string imeSlike, string putanja, string thumb)
        {
            var imeSlikeParameter = imeSlike != null ?
                new ObjectParameter("imeSlike", imeSlike) :
                new ObjectParameter("imeSlike", typeof(string));
    
            var putanjaParameter = putanja != null ?
                new ObjectParameter("putanja", putanja) :
                new ObjectParameter("putanja", typeof(string));
    
            var thumbParameter = thumb != null ?
                new ObjectParameter("thumb", thumb) :
                new ObjectParameter("thumb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GalerijaInsert", imeSlikeParameter, putanjaParameter, thumbParameter);
        }
    
        public virtual int GalerijaUpdate(Nullable<int> idSlike, string imeSlike, string putanja, string thumb)
        {
            var idSlikeParameter = idSlike.HasValue ?
                new ObjectParameter("idSlike", idSlike) :
                new ObjectParameter("idSlike", typeof(int));
    
            var imeSlikeParameter = imeSlike != null ?
                new ObjectParameter("imeSlike", imeSlike) :
                new ObjectParameter("imeSlike", typeof(string));
    
            var putanjaParameter = putanja != null ?
                new ObjectParameter("putanja", putanja) :
                new ObjectParameter("putanja", typeof(string));
    
            var thumbParameter = thumb != null ?
                new ObjectParameter("thumb", thumb) :
                new ObjectParameter("thumb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GalerijaUpdate", idSlikeParameter, imeSlikeParameter, putanjaParameter, thumbParameter);
        }
    
        public virtual int JelaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JelaDelete", idParameter);
        }
    
        public virtual int JelaInsert(string naziv, Nullable<decimal> cena, string slika)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(decimal));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JelaInsert", nazivParameter, cenaParameter, slikaParameter);
        }
    
        public virtual int JelaUpdate(Nullable<int> id, string naziv, Nullable<decimal> cena, string slika)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(decimal));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JelaUpdate", idParameter, nazivParameter, cenaParameter, slikaParameter);
        }
    
        public virtual int KontaktDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KontaktDelete", idParameter);
        }
    
        public virtual int KontaktUpdate(Nullable<int> id, string ime, string prezime, string poruka, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var porukaParameter = poruka != null ?
                new ObjectParameter("poruka", poruka) :
                new ObjectParameter("poruka", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KontaktUpdate", idParameter, imeParameter, prezimeParameter, porukaParameter, emailParameter);
        }
    
        public virtual int MeniDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MeniDelete", idParameter);
        }
    
        public virtual int MeniInsert(string naziv, string link, Nullable<int> prioritet)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var prioritetParameter = prioritet.HasValue ?
                new ObjectParameter("prioritet", prioritet) :
                new ObjectParameter("prioritet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MeniInsert", nazivParameter, linkParameter, prioritetParameter);
        }
    
        public virtual int MeniUpdate(Nullable<int> id, string naziv, string link, Nullable<int> prioritet)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var prioritetParameter = prioritet.HasValue ?
                new ObjectParameter("prioritet", prioritet) :
                new ObjectParameter("prioritet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MeniUpdate", idParameter, nazivParameter, linkParameter, prioritetParameter);
        }
    
        public virtual int NarudzbineDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbineDelete", idParameter);
        }
    
        public virtual int NarudzbineUpdate(Nullable<int> id, Nullable<int> idKorisnik, Nullable<int> idJelo, Nullable<System.DateTime> vreme, Nullable<decimal> cena, string ime, string prezime, string adresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idKorisnikParameter = idKorisnik.HasValue ?
                new ObjectParameter("idKorisnik", idKorisnik) :
                new ObjectParameter("idKorisnik", typeof(int));
    
            var idJeloParameter = idJelo.HasValue ?
                new ObjectParameter("idJelo", idJelo) :
                new ObjectParameter("idJelo", typeof(int));
    
            var vremeParameter = vreme.HasValue ?
                new ObjectParameter("vreme", vreme) :
                new ObjectParameter("vreme", typeof(System.DateTime));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(decimal));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("adresa", adresa) :
                new ObjectParameter("adresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbineUpdate", idParameter, idKorisnikParameter, idJeloParameter, vremeParameter, cenaParameter, imeParameter, prezimeParameter, adresaParameter);
        }
    
        public virtual int OdgovoriDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OdgovoriDelete", idParameter);
        }
    
        public virtual int OdgovoriInsert(string odgovor, Nullable<int> idAnketa, Nullable<int> brojGlasova)
        {
            var odgovorParameter = odgovor != null ?
                new ObjectParameter("odgovor", odgovor) :
                new ObjectParameter("odgovor", typeof(string));
    
            var idAnketaParameter = idAnketa.HasValue ?
                new ObjectParameter("idAnketa", idAnketa) :
                new ObjectParameter("idAnketa", typeof(int));
    
            var brojGlasovaParameter = brojGlasova.HasValue ?
                new ObjectParameter("brojGlasova", brojGlasova) :
                new ObjectParameter("brojGlasova", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OdgovoriInsert", odgovorParameter, idAnketaParameter, brojGlasovaParameter);
        }
    
        public virtual int OdgovoriUpdate(Nullable<int> id, string odgovor, Nullable<int> idAnketa, Nullable<int> brojGlasova)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var odgovorParameter = odgovor != null ?
                new ObjectParameter("odgovor", odgovor) :
                new ObjectParameter("odgovor", typeof(string));
    
            var idAnketaParameter = idAnketa.HasValue ?
                new ObjectParameter("idAnketa", idAnketa) :
                new ObjectParameter("idAnketa", typeof(int));
    
            var brojGlasovaParameter = brojGlasova.HasValue ?
                new ObjectParameter("brojGlasova", brojGlasova) :
                new ObjectParameter("brojGlasova", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OdgovoriUpdate", idParameter, odgovorParameter, idAnketaParameter, brojGlasovaParameter);
        }
    
        public virtual int UlogeDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UlogeDelete", idParameter);
        }
    
        public virtual int UlogeInsert(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UlogeInsert", nazivParameter);
        }
    
        public virtual int UlogeUpdate(Nullable<int> id, string naziv)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UlogeUpdate", idParameter, nazivParameter);
        }
    
        public virtual int UserDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDelete", idParameter);
        }
    
        public virtual int UserUpdate(Nullable<int> id, string username, string password, string email, Nullable<int> idUloga)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var idUlogaParameter = idUloga.HasValue ?
                new ObjectParameter("idUloga", idUloga) :
                new ObjectParameter("idUloga", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate", idParameter, usernameParameter, passwordParameter, emailParameter, idUlogaParameter);
        }
    
        public virtual int DogadjajInsert(string opis, Nullable<int> idKorisnik, Nullable<System.DateTime> vreme)
        {
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var idKorisnikParameter = idKorisnik.HasValue ?
                new ObjectParameter("idKorisnik", idKorisnik) :
                new ObjectParameter("idKorisnik", typeof(int));
    
            var vremeParameter = vreme.HasValue ?
                new ObjectParameter("vreme", vreme) :
                new ObjectParameter("vreme", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DogadjajInsert", opisParameter, idKorisnikParameter, vremeParameter);
        }
    
        public virtual int AnketePostaviNeaktivne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnketePostaviNeaktivne");
        }
    
        public virtual int OdgovoriAnketaDelete(Nullable<int> idAnketa)
        {
            var idAnketaParameter = idAnketa.HasValue ?
                new ObjectParameter("idAnketa", idAnketa) :
                new ObjectParameter("idAnketa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OdgovoriAnketaDelete", idAnketaParameter);
        }
    
        public virtual int NarudzbinaPromenaCene(Nullable<int> id, Nullable<decimal> cena)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbinaPromenaCene", idParameter, cenaParameter);
        }
    }
}
